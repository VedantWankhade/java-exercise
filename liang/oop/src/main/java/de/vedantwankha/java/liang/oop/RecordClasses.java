package de.vedantwankha.java.liang.oop;

/**
 * record classes are supposed to be used as pure data carriers
 * the fields are final private
 * getters, constructor, equals, toString, hashCode are automatically generated
 *
 * https://docs.oracle.com/en/java/javase/17/language/records.html
 */
public class RecordClasses {
    public static void useRecord() {
        Point2D p = new Point2D(22, 10.8); // autogenerated Point2D(double x, double y) constructor
        System.out.println(p.x()); // autogenerated getters
        System.out.println(p.y());
        System.out.println(p.toString()); // autogenerated toString method
        Point2D p2 = new Point2D(99, 10.8);
        System.out.println(p.equals(p2)); // autogenerated equals methodd
        System.out.println(p.hashCode()); // autogenerated hashCode method

        Rectangle r = new Rectangle(2, 3);
        Rectangle r2 = new Rectangle(-12, 3);
    }
}

// simple record class
record Point2D(double x, double y){}

// for Rectangle you might require a custom constructor that checks if the height and width are not negative
// you can write a compact constructor for such record classes
// after the compact constructor the fields are implicitely assigned
// so no need to write
// this.height = height; this.width = width;
record Rectangle(int height, int width) {
    public Rectangle {
        if (height <= 0 || width <= 0)
            throw new java.lang.IllegalArgumentException(
                String.format("Invalid dimensions: %d, %d", height, width));

        // fields will be assigned here implicitly
    }
}